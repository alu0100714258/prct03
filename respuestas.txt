18. Nos muestra lo escrito entre comillas.
21. Con el uso de comillas dobles se contraponen por lo que se muestra
es un tabulador y salto de línea , mientras que con comillas simples
nos muestra el contenido de estas , es decir, \t\n .
22. Con q y comillas simples nos imprime el contenido de q
23. Con Q y comillas doble imprime un tabulador y un salto de linea
24. Nos muestra el contenido de HERE incluyendo las asignaciones de a y b
25. Al tener las comillas simples nos muestra el contenido integro de HERE sin la asignaciones de a y b
26. 
	- s[0,2]  "he"
	- s[-1,1] "o" 
	- s[0,10] "hello"
27. En g queda asignada tanto lo que tenia asignada inicialmente como lo añadido despues con << " "
28. Queda lo siguiente: "..."
29. "2 2 2 "
30. Muestra el contenido del array como si fuesen cada palabra una array
31. Muestra ["\\t", "\\n"]
32. Muestra ["\t", "\n"]
33. Muestra el siguiente array [nil, nil, nil]
34. Muestra el siguiente array [1, 1, 1]
35. En b queda lo siguiente: [[1,2],[3,4]]
36. En c queda lo siguiente: [0, 2, 4]
37. No muestra el contenido del contenido de cada posición del array
	- a[1,1]	Nos muestra ["b"]
	- a[-2,2]	Nos muestra ["d", "e"]
	- a[0..2]	Nos muestra ["a", "b", "c"]
	- a[0...1]	Nos muestra ["a"]
	- a[-2..-1]	Nos muestra ["d", "e"]
38. Sobrescribe en el array usando la posición de cada elemento del mismo.
	- ["A,B", "c", "d", "e"]
	- ["A,B", "c", "C", "D", "E"]
	- []
	- [1, 2, 3, "A,B", "c", "C", "D", "E"]
	- [3, "A,B", "c", "C", "D", "E"]
	- [3, "A,B", "c", "C", "D", "Z"]
	- [3, "A,B", "c", "C", "D", "E"]
39. 
	- [1, 2, 3]
	- [1, 2, 3, 4, 5]
	- [1, 2, 3, 4, 5,[6, 7, 8]]
	- Da error ya que el numero debe estar entrecorchetes
40. Al realizar la segunda operación hace una resta y elimina todas las "b c y d"
del array de x
	- ["a", "b", "c", "d", "e"]
	- ["a", "a"]
41. Nos muestra el array de z multriplicado por 8 en este caso da [0, 0, 0, 0, 0, 0, 0, 0] 
42. 
	- Inserta en el array de "a" el 1
	- Inserta de forma consecutiva los numeros 2 y 3
	- Inserta el array 4,5 y 6 incluyendo los corchetes
	- Concatena
43. 
	- [1, 2, 3, 4, 5]
	- [5, 4, 3, 2, 1]
	- [2, 3, 4]
44. 
	- [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
	- [1, 2, 3, 4, 5, 6, 7, 8, 9]
	- false
	- true
	- 1 3 5 7 9  => 1...10 
	- Nos muestra un error. Es por un problema de precedencia de operadores no puedes añadir
	un numero a una lista
45. Hace comparaciones con el array de "r" para buscar 
	- true
	- true
	- true
46. 
	- TrueClass
	- FalseClass
	- hello
	- nil
	- hello
47. 
	- Symbol
	- false
	- true
	- Symbol 
	- true
	- true
	
48. 
	- Rub => nil
	- RubJava => nil
49. "3 rubies"
50 En la segunda operación le esta dando un valor a "z" pero este valor tiene una
condición que es si "x" es mayor que "y". En este caso x= 4 y y=5 por lo que z tendrá
el valor de "y"
	- [4, 5]
	- 5
	- [1, 2, 3]
51. 
	- [:a, :b] 
	- [1, 2]
	- nil
	- {:a=>1, :b=>2}
	- {:b=>2}
	- {:a=>1}
	- {:a=>1}
52. Imprime el valor de yield en la función en el que tiene 2 valores "3 y 4". 
53. 
	- Imprime una cadena vacia
	- Ninguna
54. ["h", "e", "l", "l", "o", "w", "o", "r", "l", "d", "h", "e", "l", "l", "o", "L", "P", "P"] 
55. Imprime el valor de cada variable asignada con un salto de linea y al final nos muestra cuales
son las variales que han sido mostradas su valores.


